# every push to a branch: build a binary
name: Build
on:
  push:
    branches:
jobs:
  build_binary:
    name: Build addon-operator binary
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out addon-operator code
        uses: actions/checkout@v2.3.4

      - name: Checkout submodules
        shell: bash
        run: |
          git submodule update --init --depth=1

      # Restore go_modules.tar.gz from cache or download modules and pack them
      # Then upload archive as artifact to use by other jobs.
      # NOTE: cache action is limited to 400Mb artifacts and has a 2Gb space.
      # As of June 2020, go_modules.tar.gz is ~389Mb
      - name: Cache go modules archive
        id: go-modules-cache
        uses: actions/cache@v2.1.5
        with:
          path: gomod
          key: ${{ runner.os }}-gomod-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Download and pack Go modules
        if: steps.go-modules-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p gomod
          go mod download
          tar -czf gomod/go_modules.tar.gz -C $HOME/go/pkg/mod .
          echo -n "Unpacked size is: " && du -sh $HOME/go/pkg/mod
          echo -n "Packed size is: " && du -sh gomod/go_modules.tar.gz

      - name: Unpack go modules
        if: steps.go-modules-cache.outputs.cache-hit == 'true'
        run: |
          mkdir -p $HOME/go/pkg/mod && tar -xzf gomod/go_modules.tar.gz -C $HOME/go/pkg/mod

      - name: Download prebuilt libjq static libraries
        run: |
          curl -sSfL https://github.com/flant/libjq-go/releases/download/jq-b6be13d5-0/libjq-glibc-amd64.tgz | tar zxf -

      - name: Build binary
        run: |
          export CGO_ENABLED=1
          export CGO_CFLAGS="-I$GITHUB_WORKSPACE/libjq/include"
          export CGO_LDFLAGS="-L$GITHUB_WORKSPACE/libjq/lib"
          export GOOS=linux

          go build ./cmd/addon-operator
